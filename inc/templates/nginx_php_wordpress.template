# @file   : nginx_php_wordpress.template
# #
# # Template assumes you'll have a www and non-www subdomain.
# # Included separate server blocks for rewrite purposes if needed
# # as well as a basic SSL installation
# #
# # @author : Lindsey Anderson
# # @date   : 21/04/2013
# #
# # @license: nginx_php_wordpress.template is a part of JustCurl
# #
# #    JustCurl is free software: you can redistribute it and/or modify
# #    it under the terms of the GNU General Public License as published by
# #    the Free Software Foundation, either version 3 of the License, or
# #    (at your option) any later version.
# #
# #    JustCurl is distributed in the hope that it will be useful,
# #    but WITHOUT ANY WARRANTY; without even the implied warranty of
# #    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# #    GNU General Public License for more details.
# #
# #    You should have received a copy of the GNU General Public License
# #    along with JustCurl.  If not, see <http://www.gnu.org/licenses/>.
# #
# # @url : http://justcurl.com/
#
server {
	listen ${port};
        server_name ${site_url} www.${site_url};

        root ${docroot};

 
        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }
 
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }
 
        location / {
                # This is cool because no php is touched for static content. 

                try_files $uri $uri/ /index.php?$args;
        	index index.php;
        }

 	# Note the php-fpm is set to a UNIX socket,
 	# please ensure your php-fpm is set to listen here
	location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME
                $document_root$fastcgi_script_name;
                include fastcgi_params;
        } 

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
        }
}

#server {
#        listen 80;
#
#        server_name www.${site_url};
#        rewrite ^ http://${site_url}$request_uri? permanent;
# }

# When enabling an SSL certificate in Nginx, to provide a CA Chain
# simply combine the certificate and CA chain through the following:
# 
# cat 2013-${site_url}.crt 2013-${site_url}.CA.crt > \
# 	2013-${site_url}.chained.crt
#

#server {
#       listen 443;
#       ssl on;
#       ssl_certificate /etc/pki/tls/certs/2013-${site_url}.chained.crt;
#       ssl_certificate_key /etc/pki/tls/private/2013-${site_url}.key;
#       keepalive_timeout 10;
#       rewrite ^ http://${site_url}\$request_uri? permanent;
# }
